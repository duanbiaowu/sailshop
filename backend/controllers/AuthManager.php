<?php
/**
 * Created by PhpStorm.
 * User: duanbiaowu
 * Date: 16/12/10
 * Time: 下午4:03
 */

namespace backend\controllers;

use backend\models\system\AuthRole;
use Yii;
use yii\base\Component;
use yii\web\BadRequestHttpException;

class AuthManager extends Component
{
    public function ignores()
    {
        return [
            'route' => [
                '/site/login',
                '/site/logout',
            ],
            'user' => [1]
        ];
    }

    public function init()
    {
        $currentUrl = Yii::$app->request->url;
        $rules = $this->ignores();
        if (!in_array($currentUrl, $rules['route'])) {
            if (Yii::$app->user->isGuest) {
                return Yii::$app->response->redirect('/site/login');
            }
            if (!in_array(Yii::$app->user->id, $rules['user'])) {
                Yii::$app->params['menus'] = $this->getMenusByRoleId();
                if (!$this->hasPermission()) {
                    throw new BadRequestHttpException('The requested Permission denied.', 500);
                }
            }
        }
        return parent::init(); // TODO: Change the autogenerated stub
    }

    public function getMenusByRoleId()
    {
        $result = [
            'currentModule' => explode('/', Yii::$app->request->url)[1],
            'nav' => AuthRole::find()
                ->where(['parent_id' => Yii::$app->user->identity->role_id])
                ->orderBy(['sort' => SORT_DESC])
                ->asArray()
                ->all(),
        ];

        foreach ($result['nav'] as $index => &$nav) {
            if (explode('/', $nav['route'])[1] == $result['currentModule']) {
                $nav['menus'] = AuthRole::find()
                    ->where(['parent_id' => $nav['id']])
                    ->orderBy(['sort' => SORT_DESC])
                    ->asArray()
                    ->all();

                foreach ($nav['menus'] as &$menu) {
                    $menu['child'] = AuthRole::find()
                        ->where(['parent_id' => $menu['id']])
                        ->orderBy(['sort' => SORT_DESC])
                        ->asArray()
                        ->all();
                }

                $result['currentModule'] = $nav['route'];
                $result['index'] = $index;
                break;
            }
        }

        return $result;
    }

    public function hasPermission()
    {
        $routeParams = explode('/', Yii::$app->urlManager->parseRequest(Yii::$app->request)[0]);
        $routeParams[2] = isset($routeParams[2]) ? $routeParams[2] : 'view';

        $controller = '/' . $routeParams[0] . '/' . $routeParams[1];

        $menus = Yii::$app->params['menus']['nav'][Yii::$app->params['menus']['index']]['menus'];

        foreach ($menus as $menu) {
            foreach ($menu['child'] as $child) {
                if ($child['route'] == $controller) {
                    $permission = (new AuthRole())->permission();
                    if ($child['operation'] == array_sum(array_values($permission))) {
                        return true;
                    } else if (!array_key_exists($routeParams[2], $permission)) {
                        return false;
                    } else {
                        return $child['operation'] & $permission[$routeParams[2]];
                    }
                }
            }
        }

        return false;
    }
}