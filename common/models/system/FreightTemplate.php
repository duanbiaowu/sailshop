<?php

namespace common\models\system;

use Yii;

/**
 * This is the model class for table "{{%freight_template}}".
 *
 * @property integer $id
 * @property string $name
 * @property integer $parent_id
 * @property integer $weight
 * @property integer $cost
 * @property integer $append_weight
 * @property integer $append_cost
 * @property integer $default
 */
class FreightTemplate extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%freight_template}}';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['name', 'weight', 'cost', 'append_weight', 'append_cost'], 'required'],
            [['weight', 'cost', 'append_weight', 'append_cost', 'default'], 'integer'],
            [['name'], 'string', 'max' => 2014],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'name' => Yii::t('System', 'Freight Name'),
            'weight' => Yii::t('System', 'Freight Weight'),
            'cost' => Yii::t('System', 'Freight Cost'),
            'append_weight' => Yii::t('System', 'Freight Append Weight'),
            'append_cost' => Yii::t('System', 'Freight Append Cost'),
        ];
    }

    public function afterSave($insert, $changedAttributes)
    {
        $districts = Yii::$app->request->post('district');

        if ($districts) {
            exit();
            if (!$this->isNewRecord) {
                foreach (self::findAll(['parent_id' => $this->id]) as $model) {
                    $model->delete();
                }
            }

            foreach ($districts['name'] as &$area) {
                $result = [];
                foreach ($area as $city) {
                    list($index, $city) = explode('|', $city);
                    $result[$index] = $city;
                }
                $area = $result;
            }

            foreach ($districts['name'] as $index => $district) {
                $freight = [
                    'name' => serialize($district),
                    'parent_id' => $this->id,
                    'weight' => $districts['weight'][$index],
                    'cost' => $districts['cost'][$index],
                    'append_weight' => $districts['append_weight'][$index],
                    'append_cost' => $districts['append_cost'][$index],
                ];

                Yii::$app->db->createCommand()->insert(self::tableName(), $freight)->execute();
            }
        }

        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

    public function afterFind()
    {
        if ($this->parent_id) {
            $this->name = unserialize($this->name);
        }
        parent::afterFind(); // TODO: Change the autogenerated stub
    }

    public function districts()
    {
        $districts = FreightTemplate::find()
            ->where(['parent_id' => $this->id])
            ->asArray()
            ->all();

        $result = [
            'name' => [],
            'attributes' => [],
        ];

        foreach ($districts as $index => $district) {
            foreach (unserialize($district['name']) as $id => $city) {
                $result['name'][$index]['cities'][] = [
                    'id' => $id,
                    'name' => $city,
                ];
                $result['attributes'][$index] = $district;
            }
        }
        return $result;
    }

    public function format()
    {
        $freightTemplates = self::find()
            ->indexBy('id')
            ->orderBy(['default' => SORT_DESC])
            ->asArray()
            ->all();

        foreach ($freightTemplates as $index => $template) {
            if ($template['parent_id']) {
                $template['name'] = unserialize($template['name']);
                $freightTemplates[$template['parent_id']]['districts'][] = $template;
                unset($freightTemplates[$index]);
            }
        }

        return $freightTemplates;
    }

    public function setDefault()
    {
        FreightTemplate::updateAll(['default' => 0], ['default' => 1]);

        $this->default = 1;
        $this->save();

        FreightTemplate::updateAll(['default' => 1], ['parent_id' => $this->id]);
    }

}
