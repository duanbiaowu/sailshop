<?php

namespace common\models\goods;

use common\models\order\Order;
use common\models\order\OrderAppraise;
use common\models\order\OrderDetail;
use Yii;

/**
 * This is the model class for table "{{%book}}".
 *
 * @property string $isbn
 * @property string $name
 * @property integer $category_id
 * @property integer $brand_id
 * @property string $thumbnail
 * @property string $show_pictures
 * @property string $translator
 * @property integer $pages
 * @property string $binding
 * @property integer $weight
 * @property string $publish_date
 * @property string $introduce
 * @property string $price
 * @property integer $stock
 * @property integer $status
 * @property string $modified_time
 * @property string $create_time
 */
class Book extends \yii\db\ActiveRecord
{
    const ENABLE_STATUS = 0x01;

    const DISABLE_STATUS = 0x00;

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%book}}';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['isbn', 'name', 'category_id', 'brand_id', 'pages', 'binding', 'weight', 'price', 'stock', 'publish_date'], 'required'],
            [['category_id', 'brand_id', 'pages', 'weight', 'stock', 'status'], 'integer'],
            [['modified_time', 'create_time'], 'safe'],
            [['price'], 'number'],
            [['isbn'], 'string', 'max' => 13],
            [['status'], 'default', 'value' => 1],
            [['name', 'thumbnail', 'translator'], 'string', 'max' => 128],
            [['show_pictures', 'introduce'], 'string', 'max' => 2048],
            [['binding'], 'string', 'max' => 32],
            [['isbn'], 'unique']
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'isbn' => 'ISBN',
            'name' => '名称',
            'category_id' => '分类',
            'brand_id' => '出版社',
            'thumbnail' => '封面',
            'show_pictures' => '展览图',
            'translator' => '译者',
            'pages' => '页数',
            'binding' => '装帧',
            'weight' => '重量',
            'publish_date' => '出版日期',
            'introduce' => '简介',
            'price' => '价格',
            'stock' => '库存',
            'status' => '状态',
            'modified_time' => 'Modified Time',
            'create_time' => '上架时间',
        ];
    }

    /**
     * 图书展览图序列化保存
     */
    public function beforeValidate()
    {
        if ($this->show_pictures) {
            $this->show_pictures = serialize($this->show_pictures);
        }
        return parent::beforeValidate(); // TODO: Change the autogenerated stub
    }

    /**
     * 图书展览图格式化
     */
    public function afterFind()
    {
        if ($this->show_pictures) {
            $this->show_pictures = unserialize($this->show_pictures);
        }
        parent::afterFind();
    }

    /**
     * 获取图书作者集合
     */
    public function getAuthors()
    {
        return $this->hasMany(BookAuthor::className(), ['isbn' => 'isbn']);
    }

    /**
      * 获取图书订单列表
     */
    public function getOrderDetails()
    {
        return $this->hasMany(OrderDetail::className(), ['isbn' => 'isbn']);
    }

    /**
     * 获取图书评论列表
     */
    public function getAppraisals()
    {
        return $this->hasMany(OrderAppraise::className(), ['isbn' => 'isbn']);
    }
}
