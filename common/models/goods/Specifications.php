<?php

namespace common\models\goods;

use Yii;

/**
 * This is the model class for table "{{%goods_specifications}}".
 *
 * @property integer $id
 * @property string $name
 * @property integer $parent_id
 * @property string $images
 */
class Specifications extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%goods_specifications}}';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['name'], 'required'],
            [['parent_id'], 'integer'],
            [['name'], 'string', 'max' => 64],
            [['images'], 'string', 'max' => 255],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'name' => Yii::t('Goods', 'Specifications Name'),
            'parent_id' => Yii::t('Goods', 'Specifications Parent ID'),
        ];
    }

    public static function specFormat()
    {
        $specs = self::find()
            ->indexBy('id')
            ->asArray()
            ->all();
        foreach ($specs as $index => $spec) {
            if ($spec['parent_id']) {
                $specs[$spec['parent_id']]['children'][] = $spec;
                unset($specs[$index]);
            } else {
                $specs[$index]['total'] = 0;
            }
        }
        return $specs;
    }

    public function afterSave($insert, $changedAttributes)
    {
        $currentItems = self::find()
            ->where(['parent_id' => $this->id])
            ->indexBy('id')
            ->asArray()
            ->all();

        foreach ($currentItems as $index => $item) {
            $currentItems[$index] = $item['name'];
        }

        $images = Yii::$app->request->post('images');

        foreach (Yii::$app->request->post('items') as $index => $item) {
            $record = [
                'name' => $item,
                'parent_id' => $this->id,
                'images' => $images[$index],
            ];

            if (is_numeric($key = array_search($item, $currentItems))) {
                Yii::$app->db->createCommand()->update(self::tableName(), $record, ['id' => $key])->execute();
                unset($currentItems[$key]);
            } else {
                Yii::$app->db->createCommand()->insert(self::tableName(), $record)->execute();
            }
        }

        if ($currentItems) {
            foreach ($currentItems as $id => $item) {
                Specifications::findOne($id)->delete();
            }
        }

        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

    public function afterDelete()
    {
        foreach (self::findAll(['parent_id' => $this->id]) as $spec) {
            $spec->delete();
        }
        parent::afterDelete(); // TODO: Change the autogenerated stub
    }
}
